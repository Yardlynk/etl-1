module ETL::BatchFactory
  class Base
    include Enumerable

    # Generates an empty Batch class
    def generate
      return ETL::Batch.new
    end
    
    # Use this to iterate over all batches generated by this factory. By 
    # default we assume there's only one batch. Derived classes can
    def each(&block)
      batches = generate
      if batches.respond_to?(:each) # array of Batch
        batches.each do |b|
          yield b
        end
      else # single Batch
        yield batches
      end
    end
  end
end
